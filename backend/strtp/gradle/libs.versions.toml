[versions]
agp = "8.10.1"
android-compileSdk = "36"
android-minSdk = "24"
android-targetSdk = "36"
androidx-activity = "1.10.1"
androidx-appcompat = "1.7.1"
androidx-core = "1.17.0"
androidx-espresso = "3.7.0"
androidx-lifecycle = "2.9.3"
androidx-testExt = "1.3.0"
composeHotReload = "1.0.0-beta06"
composeMultiplatform = "1.8.2"
junit = "4.13.2"
kotlin = "2.2.10"
kotlinx-coroutines = "1.10.2"
coil-version = "3.3.0"
compose-nav-version = "2.9.0-beta03"
serialization-plugin = "2.2.10" # match Kotlin
serialization-json = "1.7.3"
#ktor-version
ktor-version="3.2.3"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-testJunit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { module = "junit:junit", version.ref = "junit" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-testExt-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-testExt" }
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-espresso" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }

# keep lifecycle only in androidMain, not commonMain
androidx-lifecycle-viewmodelCompose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtimeCompose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }

kotlinx-coroutinesSwing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
coil = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil-version" }
compose-nav = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "compose-nav-version" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization-json" }

#ktor core common
ktor-client-core = {module="io.ktor:ktor-client-core",version.ref="ktor-version"}
ktor-client-contentnegotiation = {module="io.ktor:ktor-client-content-negotiation",version.ref="ktor-version"}
ktor-client-serialization = {module="io.ktor:ktor-serialization-kotlinx-json",version.ref="ktor-version"}

#ktor wasm js
ktor-client-js= { module = "io.ktor:ktor-client-js", version.ref = "ktor-version" }



#ktor android
ktor-client-android = {module="io.ktor:ktor-client-okhttp",version.ref="ktor-version"}

#ktor desktop
ktor-client-desktop = {module="io.ktor:ktor-client-cio",version.ref="ktor-version"}

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeHotReload = { id = "org.jetbrains.compose.hot-reload", version.ref = "composeHotReload" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "serialization-plugin" }
